
varying vec3 norm;
vec3 lightPos;
vec3 lightDir;
vec3 eyeVec;
varying vec4 vertex;
void main(void)
{
vec4 ambient = vec4(0.8);
vec4 especular = vec4(1.0);
vec4 diffuse = vec4(0.6,0.7,0.3,1.0);

lightPos = vec3(0.0,10.0,0.0);
lightDir = lightPos - vertex.xyz;
eyeVec = -vertex.xyz;

vec3 N = normalize(norm);
vec3 L = normalize(lightDir);
float lambertTerm = dot(N,L);

if(lambertTerm > 0.0)
{
 vec4 final_color = diffuse * vec4(1.0,0.0,0.0,1.0) * lambertTerm;	
		
 vec3 E = normalize(eyeVec);
 vec3 R = reflect(-L, N);
 float specular = pow( max(dot(R, E), 0.0), 1.0);
 final_color += especular * vec4(1.0,1.0,1.0,1.0) * specular;
 gl_FragColor = final_color;
}
else
gl_FragColor = vec4(1.0,0.0,0.0,0.0) * ambient + vec4(1.0,0.0,0.0,0.0) * diffuse;
}